[nitpick.files.present]
"README.md" = "Create a README for this project"

[nitpick.styles]
include = []

["pyproject.toml".tool.black]
line-length = 100

["pyproject.toml".tool.ruff]
line-length = 100
# https://beta.ruff.rs/docs/rules/
select = [
    "E", # pycodestyle [errors]
    "W", # pycodestyle [warnings]
    "F", # pyflakes
    "I", # isort
    "N", # pep8-naming
    "D", # pydocstyle
    "UP", # pyugrade
    "ASYNC", # flake8-async
    "S", # flake8-bandit
    "B", # flake8-bugbear
    "A", # flake8-builtins
    "C4", # flake8-comprehensions
    "DTZ", # flake8-datetimez
    "ISC", # flake8-implicit-str-concat
    "ICN", # flake8-import-conventions
    "Q", # flake8-quotes
    "RSE", # flake8-raise
    "SIM", # flake8-simplify
    "ARG", # flake8-unused-arguments
    "PD", # pandas-vet
    "PLE", # pylint (errors)
    "RUF", # ruff
]
ignore = [
    "B028", # no-explicit-stacklevel
    "C408", # unnecessary-collection-call
    "D100", # undocumented-public-module
    "D101", # undocumented-public-class
    "D102", # undocumented-public-method
    "D103", # undocumented-public-function
    "D104", # undocumented-public-package
    "D106", # undocumented-public-nested-class
    "D107", # undocumented-public-init
    "D203", # one-blank-line-before-class
    "D213", # multi-line-summary-second-line
    "D401", # non-imperative-mood
    "E501", # line-too-long [black will take care of this]
    "E712", # true-false-comparison [false positives]
    "ISC003", # explicit-string-concatenation
    "PD010", # pandas-use-of-dot-pivot-or-unstack
    "PD013", # pandas-use-of-dot-stack
    "PD015", # pandas-use-of-pd-merge
    "PD901", # pandas-df-variable-name
    "S101", # assert
    "SIM114", # if-with-same-arms
]
extend-exclude = [
    "typings", # directory containing typing stubs
    ".ipynb"  # jupyter notebooks
]

["pyproject.toml".tool.ruff.flake8-builtins]
builtins-ignorelist = ["id"]

["pyproject.toml".tool.ruff.flake8-implicit-str-concat]
allow-multiline = false

["pyproject.toml".tool.ruff.pep8-naming]
ignore-names = [
    "X",  # e.g. sklearn
]
